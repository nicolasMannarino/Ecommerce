// <auto-generated />
using System;
using Ecommerce.Repositorio.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Repositorio.Migrations
{
    [DbContext(typeof(DbecommerceContext))]
    [Migration("20241016180234_AgregarFiltros")]
    partial class AgregarFiltros
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Modelo.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__A3C02A1021B329DD");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("Ecommerce.Modelo.CategoriaFiltro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("FiltroIdFiltro")
                        .HasColumnType("int");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdFiltro")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("FiltroIdFiltro");

                    b.ToTable("CategoriaFiltro");
                });

            modelBuilder.Entity("Ecommerce.Modelo.DetalleVenta", b =>
                {
                    b.Property<int>("IdDetalleVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleVenta"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdDetalleVenta")
                        .HasName("PK__DetalleV__AAA5CEC254C0E45B");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdVenta");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Filtro", b =>
                {
                    b.Property<int>("IdFiltro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFiltro"));

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFiltro");

                    b.ToTable("Filtro");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<bool>("Baja")
                        .HasColumnType("bit");

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("PrecioOferta")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__09889210657A7DD9");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Modelo.ProductoImagen", b =>
                {
                    b.Property<int>("IdProductoImagen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProductoImagen"));

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("NumeroImagen")
                        .HasColumnType("int");

                    b.Property<string>("RutaImagen")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("IdProductoImagen")
                        .HasName("PK__ProductoImagen");

                    b.HasIndex("IdProducto");

                    b.ToTable("ProductoImagen", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Modelo.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__5B65BF97B3E7FA6B");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Ecommerce.Modelo.Venta", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<DateTime?>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdVenta")
                        .HasName("PK__Venta__BC1240BDAFA8A3A5");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("Ecommerce.Modelo.CategoriaFiltro", b =>
                {
                    b.HasOne("Ecommerce.Modelo.Categoria", "Categoria")
                        .WithMany("FiltrosCategoria")
                        .HasForeignKey("CategoriaIdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommerce.Modelo.Filtro", "Filtro")
                        .WithMany("CategoriasFiltro")
                        .HasForeignKey("FiltroIdFiltro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Filtro");
                });

            modelBuilder.Entity("Ecommerce.Modelo.DetalleVenta", b =>
                {
                    b.HasOne("Ecommerce.Modelo.Producto", "IdProductoNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK__DetalleVe__IdPro__5812160E");

                    b.HasOne("Ecommerce.Modelo.Venta", "IdVentaNavigation")
                        .WithMany("DetalleVenta")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("FK__DetalleVe__IdVen__571DF1D5");

                    b.Navigation("IdProductoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Producto", b =>
                {
                    b.HasOne("Ecommerce.Modelo.Categoria", "IdCategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoria")
                        .HasConstraintName("FK__Producto__IdCate__4CA06362");

                    b.Navigation("IdCategoriaNavigation");
                });

            modelBuilder.Entity("Ecommerce.Modelo.ProductoImagen", b =>
                {
                    b.HasOne("Ecommerce.Modelo.Producto", "Producto")
                        .WithMany("ProductoImagenes")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__ProductoImagen__IdProducto");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Venta", b =>
                {
                    b.HasOne("Ecommerce.Modelo.Usuario", "IdUsuarioNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Venta__IdUsuario__534D60F1");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Categoria", b =>
                {
                    b.Navigation("FiltrosCategoria");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Filtro", b =>
                {
                    b.Navigation("CategoriasFiltro");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Producto", b =>
                {
                    b.Navigation("DetalleVenta");

                    b.Navigation("ProductoImagenes");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Usuario", b =>
                {
                    b.Navigation("Venta");
                });

            modelBuilder.Entity("Ecommerce.Modelo.Venta", b =>
                {
                    b.Navigation("DetalleVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
